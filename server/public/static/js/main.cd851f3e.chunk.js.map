{"version":3,"sources":["helpers/jwt.js","actions/errorAction.js","actions/types.js","actions/chatsActions.js","components/chat/ChatList.js","helpers/date.js","actions/authActions.js","components/auth/Logout.js","components/chat/UserInfo.js","components/chat/ChatSearch.js","components/chat/ChatInfo.js","components/chat/ChatMessages.js","components/chat/ChatForm.js","components/wrapper/Modal.js","components/chat/modal/NewGroup.js","components/chat/modal/Contacts.js","components/chat/modal/ChatSettings.js","components/chat/modal/Invite.js","components/chat/Chat.js","components/auth/Login.js","components/auth/Register.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/contactsReducer.js","reducers/errorReducer.js","reducers/chatsReducer.js","reducers/activeChatReducer.js","reducers/index.js","store.js","index.js"],"names":["decode","require","headers","paramToken","token","localStorage","getItem","config","isExpired","getUser","user","jwt","Date","getTime","exp","returnErrors","err","id","console","log","type","payload","msg","response","data","errors","status","clearErrors","newErrors","updateMessages","message","dispatch","date","toISOString","ChatList","chats","setChat","style","maxHeight","overflowY","className","map","chat","ChatListItem","key","_id","myName","useSelector","state","auth","name","onClick","split","text","d","getDate","getMonth","getFullYear","formatDate","getHours","getMinutes","formatTime","getContacts","axios","get","then","res","catch","useDispatch","window","confirm","src","alt","height","UserInfo","collapse","setCollapse","showModal","ChatMenu","Logout","s","fontSize","role","aria-label","ChatSearch","e","preventDefault","placeholder","ChatInfo","members","groupName","length","ChatMessages","messages","end","useRef","useEffect","current","scrollIntoView","i","from","ref","ChatForm","sendMessage","useState","setText","onSubmit","value","onChange","target","modal","setModal","children","title","props","tabIndex","display","overflow","aria-hidden","submitNewGroup","setGroupName","loading","isLoading","error","JSON","stringify","disabled","username","setUsername","filter","setFilter","filteredContacts","setFilteredContacts","contacts","submit","post","newContact","contact","toLowerCase","indexOf","userId","new","activeChat","owner","myId","member","submitInvite","Chat","io","modalContent","setModalContent","off","on","group","added","room","newMember","content","Modal","NewGroup","Contacts","ChatSettings","Invite","groupId","invite","setActiveChat","emit","Welcome","alignItems","justifyContent","href","rel","Login","password","setPassword","isAuthenticated","body","setItem","login","to","htmlFor","Register","email","setEmail","setName","password2","setPassword2","register","App","setIo","close","socketio","connect","path","lastPath","rest","exact","Boolean","location","hostname","match","initialState","combineReducers","action","removeItem","index","newData","splice","unshift","middleware","thunk","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wPAAMA,EAASC,EAAQ,KAEhB,SAASC,IAA4B,IAApBC,EAAmB,uDAAN,KAC7BC,EAAQD,GAAcE,aAAaC,QAAQ,SAE3CC,EAAS,CACbL,QAAS,CACP,eAAgB,qBAMpB,OAFIE,IAAUI,EAAUJ,KACtBG,EAAOL,QAAP,+BAA4CE,IACvCG,EAGF,SAASE,IAA4B,IAApBN,EAAmB,uDAAN,KAC7BC,EAAQD,GAAcE,aAAaC,QAAQ,SACjD,IAAKF,GAASI,EAAUJ,GAAQ,OAAO,KACvC,IAAMM,EAAOV,EAAOI,GAEpB,MAAO,CAAEA,QAAOM,QAIX,SAASF,EAAUJ,GACxB,IAAMO,EAAMX,EAAOI,GAEnB,OADqB,IAAIQ,MAAOC,UAAY,IACtBF,EAAIG,ICzBrB,IAAMC,EAAe,SAACC,GAAoB,IAAfC,EAAc,uDAAT,KAErC,OADAC,QAAQC,IAAIH,GACL,CACLI,KCKsB,aDJtBC,QAAS,CACPC,IAAKN,EAAIO,SAAWP,EAAIO,SAASC,KAAKF,IAAM,GAC5CG,OAAQT,EAAIO,SAAWP,EAAIO,SAASC,KAAKC,OAAS,GAClDC,OAAQV,EAAIO,SAAWP,EAAIO,SAASG,OAAS,KAC7CT,QAMOU,EAAc,WACzB,MAAO,CACLP,KCPwB,iBDYfQ,EAAY,SAAC,GAAgC,IAA9BN,EAA6B,EAA7BA,IAAKG,EAAwB,EAAxBA,OAAUR,EAAc,uDAAT,KAC9C,MAAO,CACLG,KCfsB,aDgBtBC,QAAS,CACPC,IAAKA,GAAO,QACZG,OAAQA,GAAU,GAClBC,OAAQ,KACRT,QEKOY,EAAiB,SAAAC,GAAO,OAAI,SAAAC,GACvCA,EAAS,CACPX,KDjB2B,kBCkB3BC,QAAQ,eAAMS,EAAP,CAAgBE,MAAM,IAAIpB,MAAOqB,oBCnC7B,SAASC,EAAT,GAAuC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QACxC,OACE,yBAAKC,MAAO,CAAEC,UAAW,OAAQC,UAAW,SAC1C,wBAAIC,UAAU,cACXL,EAAMX,KAAKiB,KAAI,SAAAC,GAAI,OAClB,kBAACC,EAAD,CAAcC,IAAKF,EAAKG,IAAKH,KAAMA,EAAMN,QAASA,SAO5D,SAASO,EAAT,GAA0C,IAAlBD,EAAiB,EAAjBA,KAAMN,EAAW,EAAXA,QACtBU,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKvC,KAAKwC,QAC5CA,EAAwBR,EAAxBQ,KAAMpB,EAAkBY,EAAlBZ,QAASV,EAASsB,EAATtB,KACvB,OACE,4BACEoB,UAAU,6CACVW,QAAS,kBAAMf,EAAQM,KAEvB,uBAAGF,UAAU,OACX,2BACY,UAATpB,EACG8B,EACAA,EAAKE,MAAM,MAAM,KAAON,EACxBI,EAAKE,MAAM,MAAM,GACjBF,EAAKE,MAAM,MAAM,KAGzB,uBAAGZ,UAAU,OACX,+BACGV,GAA4B,WAAjBA,EAAQoB,MAAnB,UAA2CpB,EAAQoB,KAAnD,MACApB,GAAWA,EAAQuB,OAGxB,+BAAQvB,GCvCP,SAAoBE,GACzB,IAAMsB,EAAI,IAAI1C,KAAKoB,GAenB,MAAM,GAAN,OAAUsB,EAAEC,UAAZ,YAdc,CACZ,UACA,WACA,QACA,QACA,MACA,OACA,OACA,UACA,YACA,UACA,WACA,YAE6BD,EAAEE,YAAjC,YAAgDF,EAAEG,eDuB3BC,CAAW5B,EAAQE,OACtC,2BAAOQ,UAAU,eACdV,GCtBF,SAAoBE,GACzB,IAAMsB,EAAI,IAAI1C,KAAKoB,GACnB,MAAM,GAAN,OAAUsB,EAAEK,WAAZ,YAA0BL,EAAEM,cDoBVC,CAAW/B,EAAQE,QE1BhC,IAqDM8B,EAAc,kBAAM,SAAA/B,GAC/BgC,IACGC,IAAI,sBAAuB9D,KAC3B+D,MAAK,SAAAC,GAAG,OAAInC,EAAS,CAAEX,KJhEG,kBIgEoBC,QAAS6C,EAAI1C,UAC3D2C,OAAM,SAAAnD,GAAG,OAAID,EAAaC,EAAK,uBCpErB,aACb,IAAMe,EAAWqC,cACjB,OACE,4BACE5B,UAAU,MACVW,QAAS,kBAAMkB,OAAOC,QAAQ,YAAcvC,GD8EtB,SAAAA,GAC1BA,EAAS,CAAEX,KJrFe,iBIyF1BW,EAAS,CAAEX,KJ1Ec,gBI2EzBW,EAAS,CAAEX,KJxFiB,wBKMxB,0BAAMoB,UAAU,gBACd,yBAAK+B,IAAI,kBAAkBC,IAAI,SAASnC,MAAO,CAAEoC,OAAQ,YCRlD,SAASC,EAAT,GAKX,IAJFC,EAIC,EAJDA,SACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,UAEC,IADDrC,iBACC,MADW,GACX,EACK9B,EAAOqC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKvC,QAC7C,OACE,yBAAK8B,UAAS,oBAAeA,IAC3B,4BACEA,UAAS,gBACTW,QAAS,kBAAMyB,GAAaD,KAE5B,0BAAMnC,UAAU,gBACd,0BAAMA,UAAU,0BAGpB,0BAAMA,UAAU,kBAAkB9B,EAAKwC,MACvC,0BAAMV,UAAU,eACd,kBAACsC,EAAD,CAAUD,UAAWA,IACrB,kBAACE,EAAD,QAMR,SAASD,EAAT,GAAkC,IAAdD,EAAa,EAAbA,UACZG,EAAI,CAAEC,SAAU,OACtB,OACE,kBAAC,WAAD,KACE,0BAAMzC,UAAU,gBACd,4BACEA,UAAU,MACVW,QAAS,WACP0B,EAAU,cAGZ,0BAAMxC,MAAO2C,GAAb,MAEF,4BACExC,UAAU,MACVW,QAAS,WACP0B,EAAU,cAGZ,0BAAMxC,MAAO2C,EAAGE,KAAK,MAAMC,aAAW,KAAtC,mBC/CK,SAASC,IACtB,OACE,yBAAK5C,UAAU,yBACb,0BAAMW,QAAS,SAAAkC,GAAC,OAAIA,EAAEC,mBACpB,2BACElE,KAAK,OACLoB,UAAU,eACV+C,YAAY,UACZlD,MAAO,CAAEoC,OAAQ,OAAQQ,SAAU,YCP9B,SAASO,EAAT,GAAwC,IAApB9C,EAAmB,EAAnBA,KAAMmC,EAAa,EAAbA,UAC/B3B,EAAwBR,EAAxBQ,KAAM9B,EAAkBsB,EAAlBtB,KAAMqE,EAAY/C,EAAZ+C,QAEd3C,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKvC,KAAKwC,QAC9CwC,EACK,UAATtE,EACI8B,EACAA,EAAKE,MAAM,MAAM,KAAON,EACxBI,EAAKE,MAAM,MAAM,GACjBF,EAAKE,MAAM,MAAM,GACvB,OACE,yBAAKZ,UAAU,kBACb,6BACE,uBAAGA,UAAU,QACX,2BAAIkD,IAEI,UAATtE,GACC,+BACGqE,EAAQE,OADX,sBAfO,GAgBsCA,OAD7C,MAKJ,yBAAKnD,UAAU,kBACH,UAATpB,GACC,4BACEoB,UAAU,MACVW,QAAS,kBAAM0B,EAAU,gBAAiBa,KAE1C,0BAAMlD,UAAU,iBC1Bb,SAASoD,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAC/BC,EAAMC,iBAAO,MACb9E,EAAK8B,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKvC,KAAKmC,OAIhD,OAHAmD,qBAAU,WACRF,EAAIG,QAAQC,mBACX,CAACL,IAEF,yBAAKrD,UAAU,iBACZqD,EAASpD,KAAI,SAACX,EAASqE,GAAV,OACZ,yBACE3D,UAAS,oBACPV,EAAQsE,KACJtE,EAAQsE,OAASnF,GAAM,kBACvB,oBAEN2B,IAAKuD,GAEJrE,EAAQsE,MAAQtE,EAAQsE,OAASnF,GAAMa,EAAQoB,KAAO,KACtDpB,EAAQuB,SAGb,yBAAKgD,IAAKP,KCvBD,SAASQ,EAAT,GAAoC,IAAhBC,EAAe,EAAfA,YAAe,EACxBC,mBAAS,IADe,mBACzCnD,EADyC,KACnCoD,EADmC,KAEhD,OACE,yBAAKjE,UAAU,gBACb,0BACEkE,SAAU,SAAArB,GACRA,EAAEC,iBACEjC,GAAMkD,EAAYlD,GACtBoD,EAAQ,MAGV,2BACErF,KAAK,OACLuF,MAAOtD,EACPuD,SAAU,SAAAvB,GAAC,OAAIoB,EAAQpB,EAAEwB,OAAOF,QAChCpB,YAAY,sBAEd,gCACE,0BAAMlD,MAAO,CAAE4C,SAAU,SAAzB,aCnBK,kBAAyC,IAA9B6B,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACnCC,EAAQD,EAASE,MAAQF,EAASE,MAAMD,MAAQ,GACtD,OACE,yBACEzE,UAAU,QACV2E,SAAS,KACTjC,KAAK,SACL7C,MAAO,CAAE+E,QAASN,EAAQ,QAAU,OAAQO,SAAU,SAEtD,yBAAK7E,UAAU,eAAe0C,KAAK,YACjC,yBAAK1C,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAeyE,GAC7B,4BACE7F,KAAK,SACLoB,UAAU,QACV2C,aAAW,QACXhC,QAAS,kBAAM4D,GAAS,KAExB,0BAAMO,cAAY,QAAlB,UAGJ,yBAAK9E,UAAU,cAAcwE,OCrBxB,cAA8B,IAAnBO,EAAkB,EAAlBA,eAAkB,EACRf,mBAAS,IADD,mBACnCd,EADmC,KACxB8B,EADwB,KAEpCC,EAAU1E,aAAY,SAAAC,GAAK,OAAIA,EAAMb,MAAMuF,aAC3CC,EAAQ5E,aAAY,SAAAC,GAAK,OAAIA,EAAM2E,SAEzC,OACE,6BACGC,KAAKC,UAAUF,GAChB,0BACEnF,UAAU,OACVkE,SAAU,SAAArB,GACRA,EAAEC,iBACEI,GAAW6B,EAAe7B,GAC9B8B,EAAa,MAGf,2BACEpG,KAAK,OACLoB,UAAU,oBACV+C,YAAY,aACZoB,MAAOjB,EACPkB,SAAU,SAAAvB,GAAC,OAAImC,EAAanC,EAAEwB,OAAOF,UAEvC,4BACEmB,SAAUL,EACVjF,UAAU,qCAFZ,aCpBO,cAAwB,IAAbuE,EAAY,EAAZA,SAAY,EACJP,mBAAS,IADL,mBAC7BuB,EAD6B,KACnBC,EADmB,OAERxB,mBAAS,IAFD,mBAE7ByB,EAF6B,KAErBC,EAFqB,OAGY1B,mBAAS,IAHrB,mBAG7B2B,EAH6B,KAGXC,EAHW,KAM9BT,EAAQ5E,aAAY,SAAAC,GAAK,OAAIA,EAAM2E,SACnCU,EAAWtF,aAAY,SAAAC,GAAK,OAAIA,EAAMqF,YACtCtG,EAAWqC,cAEXkE,EAAS,SAAAjD,GACbA,EAAEC,iBACEyC,GAAUhG,ET0DQ,SAAAgG,GAAQ,OAAI,SAAAhG,GACpCgC,IACGwE,KAAK,qBAAsB,CAAER,YAAY7H,KACzC+D,MAAK,SAAAC,GACJnC,EAAS,CAAEX,KJxEe,mBIwESC,QAAS6C,EAAI1C,OAChDO,EL/DG,CACLX,KCPwB,oBIuEvB+C,OAAM,SAAAnD,GAAG,OAAIe,EAAShB,EAAaC,EAAK,wBSjElBwH,CAAWT,IAClCC,EAAY,KAGdhC,qBAAU,WACRoC,EACEC,EAASJ,QACP,SAAAQ,GAAO,OACLA,EAAQV,SAASW,cAAcC,QAAQV,EAAOS,gBAAkB,GAChED,EAAQvF,KAAKwF,cAAcC,QAAQV,EAAOS,gBAAkB,QAGjE,CAACT,EAAQI,IAEZ,IAAM7G,EAAOyG,EAASE,EAAmBE,EACzC,OACE,6BACGV,EAAMrG,KAAO,yBAAKkB,UAAU,sBAAsBmF,EAAMrG,KACzD,0BAAMoF,SAAU,SAAArB,GAAC,OAAIiD,EAAOjD,KAC1B,2BACEjE,KAAK,OACLoB,UAAU,oBACV+C,YAAY,WACZoB,MAAOoB,EACPnB,SAAU,SAAAvB,GAAC,OAAI2C,EAAY3C,EAAEwB,OAAOF,UAEtC,4BAAQnE,UAAU,qCAAlB,cAEF,6BACqB,IAApB6F,EAAS1C,OACR,uBAAGnD,UAAU,oBAAb,oBAEA,2BACEpB,KAAK,OACLoB,UAAU,oBACV+C,YAAY,uBACZoB,MAAOsB,EACPrB,SAAU,SAAAvB,GAAC,OAAI6C,EAAU7C,EAAEwB,OAAOF,UAGtC,wBACEnE,UAAU,aACVH,MAAO,CAAEC,UAAW,OAAQ+E,SAAU,SAErC7F,EAAKiB,KAAI,SAACgG,EAAStC,GAAV,OACR,wBAAIvD,IAAK6F,EAAQV,SAAW5B,EAAG3D,UAAU,4BACvC,yBAAKA,UAAU,cACb,uBAAGA,UAAU,QAAQiG,EAAQvF,MAC7B,2BAAOV,UAAU,cAAciG,EAAQV,WAEzC,4BACEvF,UAAU,kBACVW,QAAS,WZhBO,IAAAyF,EYiBd7G,GZjBc6G,EYiBUH,EAAQ5F,IZjBR,SAAAd,GACtCA,EAAS,CAAEX,KDxCgB,kBCyC3B2C,IACGwE,KAAK,YAAa,CAAEnH,KAAM,UAAWwH,UAAU1I,KAC/C+D,MAAK,SAAAC,GACAA,EAAI1C,KAAKqH,KACX9G,EAAS,CAAEX,KDrCU,gBCqCWC,QAAS6C,EAAI1C,KAAKkB,OACpDX,EAAS,CAAEX,KD1Cc,kBC0CSC,QAAS6C,EAAI1C,KAAKkB,OACpDX,EF5CG,CACLX,KCPwB,oBCoDvB+C,OAAM,SAAAnD,GAAG,OAAIe,EAAShB,EAAaC,EAAK,mBYQ7B+F,GAAS,KAGX,0BAAM1E,MAAO,CAAE4C,SAAU,QAAUC,KAAK,MAAMC,aAAW,OAAzD,wBCxEC,cAAyB,IAAdN,EAAa,EAAbA,UAAa,EACV9B,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,cAA9CrD,EAD6B,EAC7BA,QAASsD,EADoB,EACpBA,MACXC,EAAOjG,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKvC,KAAKmC,OAClD,OACE,6BACE,uBAAGL,UAAU,QACX,uCACYiD,EAAQE,OADpB,IAEGoD,IAAUC,GACT,4BACExG,UAAU,iDACVW,QAAS,WACP0B,EAAU,mBAGZ,sCAKR,wBAAIrC,UAAU,cACXiD,EAAQhD,KAAI,SAAAwG,GAAM,OACjB,wBAAIrG,IAAKqG,EAAOlB,SAAUvF,UAAU,4BAClC,uBAAGA,UAAU,QAAQyG,EAAO/F,MAC5B,2BAAOV,UAAU,cAAcyG,EAAOlB,iBCxBnC,cAA4B,IAAjBmB,EAAgB,EAAhBA,aAAgB,EACR1C,mBAAS,IADD,mBACjCuB,EADiC,KACvBC,EADuB,KAGlCL,EAAQ5E,aAAY,SAAAC,GAAK,OAAIA,EAAM2E,SACnCU,EAAWtF,aAAY,SAAAC,GAAK,OAAIA,EAAMqF,YAO5C,OACE,6BACGV,EAAMrG,KAAO,yBAAKkB,UAAU,sBAAsBmF,EAAMrG,KACzD,0BAAMoF,SAAU,SAAArB,GAAC,OARN,SAAAA,GACbA,EAAEC,iBACEyC,GAAUmB,EAAanB,GAC3BC,EAAY,IAKWM,CAAOjD,KAC1B,2BACEjE,KAAK,OACLoB,UAAU,oBACV+C,YAAY,WACZoB,MAAOoB,EACPnB,SAAU,SAAAvB,GAAC,OAAI2C,EAAY3C,EAAEwB,OAAOF,UAEtC,4BAAQnE,UAAU,qCAAlB,cAEF,6BACA,uBAAGA,UAAU,OAAb,sBACqB,IAApB6F,EAAS1C,QACR,uBAAGnD,UAAU,oBAAb,oBAEF,wBAAIA,UAAU,cACX6F,EAAS5F,KAAI,SAAAgG,GAAO,OACnB,wBAAIjG,UAAU,4BACXoF,KAAKC,UAAUY,GAChB,4BAAQjG,UAAU,kCAAlB,oB,OCPG,SAAS2G,EAAT,GAAuB,IAAPC,EAAM,EAANA,GAAM,EACH5C,oBAAS,GADN,mBAC5B7B,EAD4B,KAClBC,EADkB,OAET4B,oBAAS,GAFA,mBAE5BM,EAF4B,KAErBC,EAFqB,OAGKP,mBAAS,MAHd,mBAG5B6C,EAH4B,KAGdC,EAHc,KAK7BnH,EAAQY,aAAY,SAAAC,GAAK,OAAIA,EAAMb,SACnC2G,EAAa/F,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,cACtCpI,EAASqC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAApCvC,KACFqB,EAAWqC,cAEjB4B,qBAAU,WACJoD,GAAIA,EAAGG,MAEXH,EAAGI,GAAG,WAAW,SAAA1H,GACfC,EAASF,EAAeC,OAG1BsH,EAAGI,GAAG,SAAS,SAAAC,GACb1H,EfqCe,SAAA0H,GAAK,OAAI,SAAA1H,GAC5BA,EAAS,CAAEX,KD3DiB,iBC2DKC,QAASoI,KetC7BC,CAAMD,OAGjBL,EAAGI,GAAG,cAAc,SAAC9I,EAAMO,GACzBc,EACEF,EAAe,CACbqB,KAAM,SACNG,KAAK,GAAD,OAAK3C,EAAKwC,KAAV,aAAmBxC,EAAKqH,SAAxB,sBACJ4B,KAAMb,EAAWjG,OAGjBnC,EAAKmC,MAAQ5B,GAAIc,EfqBF,SAAArB,GAAI,OAAI,SAAAqB,GAC/BA,EAAS,CAAEX,KDxDa,aCwDKC,QAASX,KetBJkJ,CAAUlJ,SAEzC,CAACqB,EAAUqH,EAAIN,EAAWjG,IAAKnC,EAAKmC,MAEvCmD,qBAAU,WAERjE,GflD2B,SAAAA,GAC7BA,EAAS,CAAEX,KDAgB,kBCC3B2C,IACGC,IAAI,YAAa9D,KACjB+D,MAAK,SAAAC,GACJnC,EFDG,CACLX,KCPwB,iBCQtBW,EAAS,CAAEX,KDJW,eCISC,QAAS6C,EAAI1C,UAE7C2C,OAAM,SAAAnD,GACLe,EAAShB,EAAaC,EAAK,gBAC3Be,EAAS,CAAEX,KDPU,wBgBgDtB,CAACW,IAEJ,IAKM8C,EAAY,SAAAgF,GAChBP,EAAgBO,GAChB9C,GAAS,IAyBX,OACE,yBAAKvE,UAAU,UAAUvB,GAAG,QAC1B,kBAAC6I,EAAD,CAAOhD,MAAOA,EAAOC,SAAUA,GACX,aAAjBsC,EACC,kBAACU,EAAD,CAAU9C,MAAM,aAAaM,eAZd,SAAA7B,GfhDE,IAAAxC,EeiDvBnB,GfjDuBmB,EeiDFwC,EfjDU,SAAA3D,GACjCA,EAAS,CAAEX,KD7BgB,kBC8B3B2C,IACGwE,KAAK,YAAa,CAAErF,OAAM9B,KAAM,SAAWlB,KAC3C+D,MAAK,SAAAC,GACJnC,EAAS,CAAEX,KDzBY,gBCyBSC,QAAS6C,EAAI1C,OAC7CO,EAAS,CAAEX,KD9Bc,kBC8BSC,QAAS6C,EAAI1C,UAEhD2C,OAAM,SAAAnD,GAAG,OAAID,EAAaC,EAAK,4Be0ChC4D,GAAY,GACZmC,GAAS,MAUgB,aAAjBsC,EACF,kBAACW,EAAD,CAAU/C,MAAM,SAASF,SAAUA,IAChB,kBAAjBsC,EACF,kBAACY,EAAD,CAAchD,MAAO6B,EAAW5F,KAAM2B,UAAWA,IAC9B,kBAAjBwE,EACF,kBAACa,EAAD,CAAQjD,MAAO6B,EAAW5F,KAAMgG,aAZnB,SAAAnB,GAAQ,OAAIhG,Ef9Bb,SAACgG,EAAUoC,GAAX,OAAuB,SAAApI,GAC3CgC,IACGwE,KAAK,mBAAoB,CAAER,WAAUoC,WAAWjK,KAChD+D,MAAK,SAAAC,GACJnC,EAAS,CAAEX,KD/CS,aC+CSC,QAAS6C,EAAI1C,OAC1CO,EFtDG,CACLX,KCPwB,oBC8DvB+C,OAAM,SAAAnD,GACLe,EAAShB,EAAaC,EAAK,qBesBWoJ,CAAOrC,EAAUe,EAAWjG,SAc9D,IAIJ,yBAAKL,UAAS,yBACZ,kBAACkC,EAAD,CACEC,SAAUA,EACVC,YAAaA,EACbC,UAAWA,IAEb,yBAAKrC,UAAS,UAAKmC,GAAY,WAAjB,iBACZ,kBAACS,EAAD,MACA,kBAAClD,EAAD,CAAUC,MAAOA,EAAOC,QAxDhB,SAAAM,GACdX,EfxCyB,SAAAW,GAAI,OAAI,SAAAX,GAEnCgC,IAAMC,IAAN,oBAAuBtB,EAAKG,KAAO3C,KAAW+D,MAAK,SAAAC,GAEjDnC,EAAS,CAAEX,KDbgB,kBCaOC,QAAS6C,EAAI1C,WeoCtC6I,CAAc3H,IACvBkC,GAAY,QAyDV,yBACEpC,UAAS,4CAAuCmC,GAC9C,aAEDmE,EAAWjG,IACV,kBAAC,WAAD,KACE,kBAAC2C,EAAD,CAAU9C,KAAMoG,EAAYjE,UAAWA,IACvC,kBAACe,EAAD,CAAcC,SAAUiD,EAAWjD,WACnC,kBAACS,EAAD,CAAUC,YAzDA,SAAAlD,GAAS,IACnBR,EAAcnC,EAAdmC,IAAKK,EAASxC,EAATwC,KACbkG,EAAGkB,KACD,UACA,CAAElE,KAAMvD,EAAKK,OAAMG,OAAMsG,KAAMb,EAAWjG,MAC1C,YAAsB,EAAnB7B,IAAoB,IAAfc,EAAc,EAAdA,QAINC,EAASF,EAAeC,WAmDtB,kBAACyI,EAAD,QAOV,SAASA,IACP,OACE,yBACElI,MAAO,CACL+E,QAAS,OACToD,WAAY,SACZC,eAAgB,SAChBhG,OAAQ,UAGV,yBAAKjC,UAAU,eACb,4BACE,uBACEkI,KAAK,2BACL7D,OAAO,SACP8D,IAAI,uBAHN,KAOA,uBACED,KAAK,yBACL7D,OAAO,SACP8D,IAAI,uBAHN,KAOA,uBACED,KAAK,uBACL7D,OAAO,SACP8D,IAAI,uBAHN,KAOA,uBACED,KAAK,sBACL7D,OAAO,SACP8D,IAAI,uBAHN,KAMK,IA5BP,YA+BA,+BAEE,uBACED,KAAK,qBACL7D,OAAO,SACP8D,IAAI,uBAHN,gBCpLK,SAASC,IAAS,IAAD,EACEpE,mBAAS,IADX,mBACvBuB,EADuB,KACbC,EADa,OAEExB,mBAAS,IAFX,mBAEvBqE,EAFuB,KAEbC,EAFa,KAIxBnD,EAAQ5E,aAAY,SAAAC,GAAK,OAAIA,EAAM2E,SACjCoD,EAAoBhI,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAA/C8H,gBAEFhJ,EAAWqC,cAEjB4B,qBAAU,WACRjE,ElBAK,CACLX,KCPwB,mBiBOvB,CAACW,IAEJ,IAAMuG,EAAS,SAAAjD,GACbA,EAAEC,iBACFvD,EbsBiB,SAAC,GAAD,IAAGgG,EAAH,EAAGA,SAAU8C,EAAb,EAAaA,SAAb,OAA4B,SAAA9I,GAC/CA,EAAS,CAAEX,KJ3Ce,iBI6C1B,IAAM4J,EAAOpD,KAAKC,UAAU,CAAEE,WAAU8C,aAExC9G,IACGwE,KAAK,kBAAmByC,EAAM9K,KAC9B+D,MAAK,SAAAC,GACJ7D,aAAa4K,QAAQ,QAAS/G,EAAI1C,KAAKpB,OACvC2B,EAAS,CACPX,KJtDoB,eIuDpBC,QAASZ,EAAQJ,aAAaC,QAAQ,YAExCyB,EAAS+B,KACT/B,ELzCG,CACLX,KCPwB,oBIiDvB+C,OAAM,SAAAnD,GACLe,EAAShB,EAAaC,EAAK,eAC3Be,EAAS,CAAEX,KJ7DS,mBiBqBb8J,CAAM,CAAEnD,WAAU8C,eAG7B,OAAIE,EAAwB,kBAAC,IAAD,CAAUI,GAAG,MAEvC,yBAAK3I,UAAU,0BACb,yBAAKA,UAAU,6CACb,qCACCoF,KAAKC,UAAUF,GAChB,0BAAMjB,SAAU,SAAArB,GAAC,OAAIiD,EAAOjD,KAC1B,yBAAK7C,UAAU,kBACb,2BAAOA,UAAU,0BAA0B4I,QAAQ,YAAnD,YAGA,2BACEhK,KAAK,OACLoB,UAAU,wBACVmE,MAAOoB,EACPnB,SAAU,SAAAvB,GAAC,OAAI2C,EAAY3C,EAAEwB,OAAOF,WAGxC,yBAAKnE,UAAU,kBACb,2BAAOA,UAAU,0BAA0B4I,QAAQ,YAAnD,YAGA,2BACEhK,KAAK,WACLoB,UAAU,wBACVmE,MAAOkE,EACPjE,SAAU,SAAAvB,GAAC,OAAIyF,EAAYzF,EAAEwB,OAAOF,WAGxC,yBAAKnE,UAAU,kBACb,4BAAQA,UAAU,0DAAlB,SAGA,yBAAKA,UAAU,+CACb,kBAAC,IAAD,CAAM2I,GAAG,aAAT,iBCpDC,SAASE,IAAY,IAAD,EACD7E,mBAAS,IADR,mBAC1BuB,EAD0B,KAChBC,EADgB,OAEPxB,mBAAS,IAFF,mBAE1B8E,EAF0B,KAEnBC,EAFmB,OAGT/E,mBAAS,IAHA,mBAG1BtD,EAH0B,KAGpBsI,EAHoB,OAIDhF,mBAAS,IAJR,mBAI1BqE,EAJ0B,KAIhBC,EAJgB,OAKCtE,mBAAS,IALV,mBAK1BiF,EAL0B,KAKfC,EALe,KAO3B/D,EAAQ5E,aAAY,SAAAC,GAAK,OAAIA,EAAM2E,SACjCoD,EAAoBhI,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAA/C8H,gBACFhJ,EAAWqC,cAEjB4B,qBAAU,WACRjE,EAASJ,KACR,CAACI,IAEJ,IAAMuG,EAAS,SAAAjD,GAEb,GADAA,EAAEC,iBACEuF,IAAaY,EACf,OAAO1J,EACLH,EACE,CACEN,IAAK,mBACLG,OAAQ,CAAC,mCAEX,kBAGNM,EdRoB,SAAC,GAAD,IAAGgG,EAAH,EAAGA,SAAU7E,EAAb,EAAaA,KAAMoI,EAAnB,EAAmBA,MAAOT,EAA1B,EAA0BA,SAA1B,OAAyC,SAAA9I,GAC/DA,EAAS,CAAEX,KJzBe,iBI2B1B,IAAM4J,EAAOpD,KAAKC,UAAU,CAAEE,WAAU7E,OAAMoI,QAAOT,aAErD9G,IACGwE,KAAK,aAAcyC,EAAM9K,KACzB+D,MAAK,SAAAC,GACJnC,EAAS,CAAEX,KJlCW,eIkCSC,QAASZ,EAAQyD,EAAI1C,KAAKpB,SACzD2B,ELlBG,CACLX,KCPwB,oBI0BvB+C,OAAM,SAAAnD,GACLe,EAAShB,EAAaC,EAAK,kBAC3Be,EAAS,CAAEX,KJtCS,mBkBiCbuK,CAAS,CAAE5D,WAAU8C,WAAUS,QAAOpI,WAGjD,OAAI6H,EAAwB,kBAAC,IAAD,CAAUI,GAAG,MAEvC,yBAAK3I,UAAU,0BACb,yBAAKA,UAAU,6CACb,wCACCoF,KAAKC,UAAUF,GAChB,0BAAMjB,SAAU,SAAArB,GAAC,OAAIiD,EAAOjD,KAC1B,yBAAK7C,UAAU,kBACb,2BAAOA,UAAU,0BAA0B4I,QAAQ,YAAnD,YAGA,2BACE7F,YAAY,WACZnE,KAAK,OACLoB,UAAU,wBACVmE,MAAOoB,EACPnB,SAAU,SAAAvB,GAAC,OAAI2C,EAAY3C,EAAEwB,OAAOF,WAGxC,yBAAKnE,UAAU,kBACb,2BAAOA,UAAU,0BAA0B4I,QAAQ,SAAnD,SAGA,2BACE7F,YAAY,QACZnE,KAAK,QACLoB,UAAU,wBACVmE,MAAO2E,EACP1E,SAAU,SAAAvB,GAAC,OAAIkG,EAASlG,EAAEwB,OAAOF,WAGrC,yBAAKnE,UAAU,kBACb,2BAAOA,UAAU,0BAA0B4I,QAAQ,QAAnD,QAGA,2BACE7F,YAAY,OACZnE,KAAK,OACLoB,UAAU,wBACVmE,MAAOzD,EACP0D,SAAU,SAAAvB,GAAC,OAAImG,EAAQnG,EAAEwB,OAAOF,WAGpC,yBAAKnE,UAAU,kBACb,2BAAOA,UAAU,0BAA0B4I,QAAQ,YAAnD,YAGA,2BACE7F,YAAY,WACZnE,KAAK,WACLoB,UAAU,wBACVmE,MAAOkE,EACPjE,SAAU,SAAAvB,GAAC,OAAIyF,EAAYzF,EAAEwB,OAAOF,WAGxC,yBAAKnE,UAAU,kBACb,2BAAOA,UAAU,0BAA0B4I,QAAQ,aAAnD,uBAGA,2BACE7F,YAAY,sBACZnE,KAAK,WACLoB,UAAU,wBACVmE,MAAO8E,EACP7E,SAAU,SAAAvB,GAAC,OAAIqG,EAAarG,EAAEwB,OAAOF,WAGzC,yBAAKnE,UAAU,kBACb,4BAAQA,UAAU,0DAAlB,YAGA,yBAAKA,UAAU,+CACb,kBAAC,IAAD,CAAM2I,GAAG,UAAT,cC5CCS,MAhDf,WACE,IAAM7J,EAAWqC,cADJ,EAEsBrB,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAtD8H,EAFK,EAELA,gBAAiB3K,EAFZ,EAEYA,MAFZ,EAGOoG,mBAAS,MAHhB,mBAGN4C,EAHM,KAGFyC,EAHE,KA0Bb,OArBA7F,qBAAU,WACRjE,GfT0B,SAAAA,GAC5BA,EAAS,CAAEX,KJbe,iBIc1B,IAAMV,EAAOD,IACb,GAAIC,EAEF,OADAqB,EAAS,CAAEX,KJfY,cIeOC,QAASX,IAChCqB,EAAS+B,KAElB/B,EAASH,EAAU,CAAEN,IAAK,cAC1BS,EAAS,CAAEX,KJrBa,oBmBuBrB,CAACW,IAEJiE,qBAAU,WAEJ5F,IACEgJ,EACGA,GAAIA,EAAG0C,QADND,EAAME,IAASC,QAAT,kBAA4B5L,QAE3C,CAACA,EAAOgJ,IAaT,yBAAK5G,UAAU,kBAAkBvB,GAAG,OAClC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,mBAbU,SAAC,GAA2C,IAAzCgL,EAAwC,EAAxCA,KAAgBjF,GAAwB,EAAlCkF,SAAkC,EAAxBlF,UAAamF,EAAW,8CAC3D,OAAKpB,EAEH,kBAAC,IAAD,eAAOkB,KAAMA,GAAUE,GACpBnF,GAHwB,kBAAC,IAAD,CAAUmE,GAAG,aAYpC,CAAWiB,OAAK,EAACH,KAAK,KACpB,kBAAC9C,EAAD,CAAMC,GAAIA,KAEZ,kBAAC,IAAD,CAAOgD,OAAK,EAACH,KAAK,UAChB,kBAACrB,EAAD,OAEF,kBAAC,IAAD,CAAOwB,OAAK,EAACH,KAAK,aAChB,kBAACZ,EAAD,OAEF,kBAAC,IAAD,CAAOY,KAAK,KACV,8CC9CQI,QACW,cAA7BhI,OAAOiI,SAASC,UAEe,UAA7BlI,OAAOiI,SAASC,UAEhBlI,OAAOiI,SAASC,SAASC,MACvB,2D,oBCVAC,EAAe,CACnBrM,MAAO,KACP2K,iBAAiB,EACjBrD,WAAW,EACXhH,KAAM,M,QCNF+L,EAAe,GCJfA,EAAe,CACnBnL,IAAK,GACLG,OAAQ,GACRC,OAAQ,KACRT,GAAI,MCKAwL,EAAe,CACnBjL,KAAM,GACNkG,WAAW,GCNP+E,EAAe,CACnB5J,IAAK,KACLK,KAAM,GACN9B,KAAM,GACNqE,QAAS,GACTI,SAAU,GACV6B,WAAW,GCNEgF,cAAgB,CAC7BzJ,KLOa,WAAwC,IAA/BD,EAA8B,uDAAtByJ,EAAcE,EAAQ,uCACpD,OAAQA,EAAOvL,MACb,IrBdwB,eqBetB,OAAO,eAAK4B,EAAZ,CAAmB0E,WAAW,IAChC,IrBlBwB,eqBmBxB,IrBhBuB,cqBkBrB,OAAO,eACFiF,EAAOtL,QADZ,CAEEqG,WAAW,EACXqD,iBAAiB,IAErB,IrBzBsB,aqB0BtB,IrBvB0B,iBqByBxB,OADA1K,aAAauM,WAAW,SACjBH,EACT,QACE,OAAOzJ,IKvBXqF,SJDa,WAAwC,IAA/BrF,EAA8B,uDAAtByJ,EAAcE,EAAQ,uCACpD,OAAQA,EAAOvL,MACb,ItBH2B,kBsBIzB,OAAOuL,EAAOtL,QAChB,ItBJ4B,mBsBK1B,MAAM,GAAN,mBAAW2B,GAAX,CAAkB2J,EAAOtL,UAC3B,ItBT0B,iBsBUxB,OAAOoL,EACT,QACE,OAAOzJ,IIPX2E,MHDa,WAAwC,IAA/B3E,EAA8B,uDAAtByJ,EAAcE,EAAQ,uCACpD,OAAQA,EAAOvL,MACb,IvBAsB,auBCpB,MAAO,CACLE,IAAKqL,EAAOtL,QAAQC,IACpBG,OAAQkL,EAAOtL,QAAQI,OACvBC,OAAQiL,EAAOtL,QAAQK,OACvBT,GAAI0L,EAAOtL,QAAQJ,IAEvB,IvBNwB,euBOtB,OAAOwL,EACT,QACE,OAAOzJ,IGVXb,MFKa,WAAwC,IAA/Ba,EAA8B,uDAAtByJ,EAAcE,EAAQ,uCACpD,OAAQA,EAAOvL,MACb,IxBHyB,gBwBIvB,OAAO,eAAK4B,EAAZ,CAAmB0E,WAAW,IAChC,IxBJwB,ewBKtB,MAAO,CACLlG,KAAMmL,EAAOtL,QACbqG,WAAW,GAEf,IxBJ2B,kBwBKzB,IAAImF,EAAQ,KAENC,EAAU9J,EAAMxB,KAAKiB,KAAI,SAACC,EAAMyD,GAMpC,OALIzD,EAAKG,MAAQ8J,EAAOtL,QAAQsI,OAC9BkD,EAAQ1G,EACRzD,EAAKZ,QAAU6K,EAAOtL,QACtBqB,EAAKmD,SAAL,sBAAoBnD,EAAKmD,UAAzB,CAAmC8G,EAAOtL,WAErCqB,KAIT,OADAoK,EAAQC,OAAO,EAAG,EAAGD,EAAQC,OAAOF,EAAO,GAAG,IACvC,CACLnF,WAAW,EACXlG,KAAMsL,GAEV,IxBnByB,gBwBoBzB,IxBjB0B,iBwBiB1B,MACwCH,EAAOtL,QAArCwB,EADV,EACUA,IAAKK,EADf,EACeA,KAAM9B,EADrB,EACqBA,KAAMyE,EAD3B,EAC2BA,SAQzB,OAPA7C,EAAMxB,KAAKwL,QAAQ,CACjBnK,MACAK,OACA9B,OACAyE,WACA/D,QAAS+D,EAAS,KAEb,eACF7C,EADL,CAEE0E,WAAW,IAEf,IxBtCuB,cwBuCvB,IxBxCuB,cwByCvB,IxBrD0B,iBwBsDxB,OAAO+E,EACT,QACE,OAAOzJ,IEjDX8F,WDIa,WAAwC,IAA/B9F,EAA8B,uDAAtByJ,EAAcE,EAAQ,uCACpD,OAAQA,EAAOvL,MACb,IzBC2B,kByBAzB,OAAO,eAAKuL,EAAOtL,SACrB,IzBC2B,kByBAzB,OAAO,eAAK2B,EAAZ,CAAmB6C,SAAS,GAAD,mBAAM7C,EAAM6C,UAAZ,CAAsB8G,EAAOtL,YAC1D,IzBEsB,ayBDpB,OAAO,eAAK2B,EAAZ,CAAmByC,QAAQ,GAAD,mBAAMzC,EAAMyC,SAAZ,CAAqBkH,EAAOtL,YACxD,IzBnB0B,iByBoBxB,OAAOoL,EACT,QACE,OAAOzJ,MErBPiK,GAAa,CAACC,KAaLC,GAZDC,YACZC,EAJmB,GAMnBhJ,OAAOiJ,6BACHC,YACEC,IAAe,WAAf,EAAmBP,IACnB5I,OAAOiJ,8BAAgCjJ,OAAOiJ,gCAEhDC,YACEC,IAAe,WAAf,EAAmBP,MCP3BQ,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,IACf,kBAAC,EAAD,OAEFQ,SAASC,eAAe,SRsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9J,MAAK,SAAA+J,GACJA,EAAaC,gBAEd9J,OAAM,SAAAwD,GACLzG,QAAQyG,MAAMA,EAAM7F,a","file":"static/js/main.cd851f3e.chunk.js","sourcesContent":["const decode = require(\"jwt-decode\");\n\nexport function headers(paramToken = null) {\n  const token = paramToken || localStorage.getItem(\"token\");\n  // headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n  // if token, add to headers\n  if (token && !isExpired(token))\n    config.headers[\"Authorization\"] = `Bearer ${token}`;\n  return config;\n}\n\nexport function getUser(paramToken = null) {\n  const token = paramToken || localStorage.getItem(\"token\");\n  if (!token || isExpired(token)) return null;\n  const user = decode(token);\n  // return token + user data\n  return { token, user };\n}\n\n// check exp\nexport function isExpired(token) {\n  const jwt = decode(token);\n  const current_time = new Date().getTime() / 1000;\n  return current_time > jwt.exp;\n}\n","import { GET_ERRORS, CLEAR_ERRORS } from \"./types\";\n\n// RETURN ERRORS (from request)\nexport const returnErrors = (err, id = null) => {\n  console.log(err);\n  return {\n    type: GET_ERRORS,\n    payload: {\n      msg: err.response ? err.response.data.msg : \"\",\n      errors: err.response ? err.response.data.errors : [],\n      status: err.response ? err.response.status : null,\n      id\n    }\n  };\n};\n\n// CLEAR ERRORS\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n\n// CREATE ERRORS\nexport const newErrors = ({ msg, errors }, id = null) => {\n  return {\n    type: GET_ERRORS,\n    payload: {\n      msg: msg || \"Error\",\n      errors: errors || [],\n      status: null,\n      id\n    }\n  };\n};\n","// Auth\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\n\nexport const CONTACTS_LOADED = \"CONTACTS_LOADED\";\nexport const CONTACTS_UPDATED = \"CONTACTS_UPDATED\";\n\n// Errors\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\n\n// Chats\nexport const CHATS_LOADING = \"CHATS_LOADING\";\nexport const CHATS_LOADED = \"CHATS_LOADED\";\nexport const CHATS_ERROR = \"CHATS_ERROR\";\nexport const CLEAR_CHATS = \"CLEAR_CHATS\";\nexport const SET_ACTIVE_CHAT = \"SET_ACTIVE_CHAT\";\n\nexport const UPDATE_MESSAGES = \"UPDATE_MESSAGES\";\n\nexport const GROUP_CREATED = \"GROUP_CREATED\";\nexport const NEW_MEMBER = \"NEW_MEMBER\";\n\nexport const ADDED_TO_GROUP = \"ADDED_TO_GROUP\";\n","import axios from \"axios\";\nimport {\n  CHATS_LOADING,\n  CHATS_LOADED,\n  CHATS_ERROR,\n  SET_ACTIVE_CHAT,\n  UPDATE_MESSAGES,\n  GROUP_CREATED,\n  NEW_MEMBER,\n  ADDED_TO_GROUP\n} from \"./types\";\nimport { headers } from \"../helpers/jwt\";\nimport { clearErrors, returnErrors } from \"./errorAction\";\n\nexport const loadChats = () => dispatch => {\n  dispatch({ type: CHATS_LOADING });\n  axios\n    .get(\"/api/chat\", headers())\n    .then(res => {\n      dispatch(clearErrors());\n      dispatch({ type: CHATS_LOADED, payload: res.data });\n    })\n    .catch(err => {\n      dispatch(returnErrors(err, \"CHATS_ERROR\"));\n      dispatch({ type: CHATS_ERROR });\n    });\n};\n\nexport const setActiveChat = chat => dispatch => {\n  // get full messages\n  axios.get(`/api/chat/${chat._id}`, headers()).then(res => {\n    //chat.messages = res.data.messages;\n    dispatch({ type: SET_ACTIVE_CHAT, payload: res.data });\n  });\n};\n\nexport const updateMessages = message => dispatch => {\n  dispatch({\n    type: UPDATE_MESSAGES,\n    payload: { ...message, date: new Date().toISOString() }\n  });\n};\n\nexport const createGroup = name => dispatch => {\n  dispatch({ type: CHATS_LOADING });\n  axios\n    .post(\"/api/chat\", { name, type: \"group\" }, headers())\n    .then(res => {\n      dispatch({ type: GROUP_CREATED, payload: res.data });\n      dispatch({ type: SET_ACTIVE_CHAT, payload: res.data });\n    })\n    .catch(err => returnErrors(err, \"CREATE_GROUP_ERROR\"));\n};\n\nexport const privateMessage = userId => dispatch => {\n  dispatch({ type: CHATS_LOADING });\n  axios\n    .post(\"/api/chat\", { type: \"private\", userId }, headers())\n    .then(res => {\n      if (res.data.new)\n        dispatch({ type: GROUP_CREATED, payload: res.data.chat });\n      dispatch({ type: SET_ACTIVE_CHAT, payload: res.data.chat });\n      dispatch(clearErrors());\n    })\n    .catch(err => dispatch(returnErrors(err, \"PM_ERROR\")));\n};\n\nexport const invite = (username, groupId) => dispatch => {\n  axios\n    .post(\"/api/chat/invite\", { username, groupId }, headers())\n    .then(res => {\n      dispatch({ type: NEW_MEMBER, payload: res.data });\n      dispatch(clearErrors());\n    })\n    .catch(err => {\n      dispatch(returnErrors(err, \"INVITE_ERROR\"));\n    });\n};\n\nexport const newMember = user => dispatch => {\n  dispatch({ type: NEW_MEMBER, payload: user });\n};\n\n//\nexport const added = group => dispatch => {\n  dispatch({ type: ADDED_TO_GROUP, payload: group });\n};\n","import React from \"react\";\nimport { formatDate, formatTime } from \"../../helpers/date\";\nimport { useSelector } from \"react-redux\";\n\nexport default function ChatList({ chats, setChat }) {\n  return (\n    <div style={{ maxHeight: \"82vh\", overflowY: \"auto\" }}>\n      <ul className=\"list-group\">\n        {chats.data.map(chat => (\n          <ChatListItem key={chat._id} chat={chat} setChat={setChat} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction ChatListItem({ chat, setChat }) {\n  const myName = useSelector(state => state.auth.user.name);\n  const { name, message, type } = chat;\n  return (\n    <button\n      className=\"list-group-item list-group-item-action p-2\"\n      onClick={() => setChat(chat)}\n    >\n      <p className=\"m-0\">\n        <b>\n          {type === \"group\"\n            ? name\n            : name.split(\"__\")[0] === myName\n            ? name.split(\"__\")[1]\n            : name.split(\"__\")[0]}\n        </b>\n      </p>\n      <p className=\"m-0\">\n        <small>\n          {message && message.name !== \"System\" && `${message.name}: `}\n          {message && message.text}\n        </small>\n      </p>\n      <small>{message && formatDate(message.date)}</small>\n      <small className=\"float-right\">\n        {message && formatTime(message.date)}\n      </small>\n    </button>\n  );\n}\n","export function formatDate(date) {\n  const d = new Date(date);\n  const bulan = [\n    \"Januari\",\n    \"Februari\",\n    \"Maret\",\n    \"April\",\n    \"Mei\",\n    \"Juni\",\n    \"Juli\",\n    \"Agustus\",\n    \"September\",\n    \"Oktober\",\n    \"November\",\n    \"Desember\"\n  ];\n  return `${d.getDate()} ${bulan[d.getMonth()]} ${d.getFullYear()}`;\n}\n\nexport function formatTime(date) {\n  const d = new Date(date);\n  return `${d.getHours()}:${d.getMinutes()}`;\n}\n","import axios from \"axios\";\nimport { returnErrors, clearErrors, newErrors } from \"./errorAction\";\nimport {\n  USER_LOADING,\n  USER_LOADED,\n  AUTH_SUCCESS,\n  AUTH_ERROR,\n  CLEAR_CHATS,\n  LOGOUT_SUCCESS,\n  CONTACTS_LOADED,\n  CONTACTS_UPDATED\n} from \"../actions/types\";\nimport { headers, getUser } from \"../helpers/jwt\";\n\n// load user\nexport const loadUser = () => dispatch => {\n  dispatch({ type: USER_LOADING });\n  const user = getUser();\n  if (user) {\n    dispatch({ type: USER_LOADED, payload: user });\n    return dispatch(getContacts());\n  }\n  dispatch(newErrors({ msg: \"No token\" }));\n  dispatch({ type: AUTH_ERROR });\n};\n\n// register\nexport const register = ({ username, name, email, password }) => dispatch => {\n  dispatch({ type: USER_LOADING });\n  // request body\n  const body = JSON.stringify({ username, name, email, password });\n  // register\n  axios\n    .post(\"/api/users\", body, headers())\n    .then(res => {\n      dispatch({ type: AUTH_SUCCESS, payload: getUser(res.data.token) });\n      dispatch(clearErrors());\n    })\n    .catch(err => {\n      dispatch(returnErrors(err, \"REGISTER_FAIL\"));\n      dispatch({ type: AUTH_ERROR });\n    });\n};\n\n// login\nexport const login = ({ username, password }) => dispatch => {\n  dispatch({ type: USER_LOADING });\n  // req body\n  const body = JSON.stringify({ username, password });\n  // login\n  axios\n    .post(\"/api/users/auth\", body, headers())\n    .then(res => {\n      localStorage.setItem(\"token\", res.data.token);\n      dispatch({\n        type: AUTH_SUCCESS,\n        payload: getUser(localStorage.getItem(\"token\"))\n      });\n      dispatch(getContacts());\n      dispatch(clearErrors());\n    })\n    .catch(err => {\n      dispatch(returnErrors(err, \"LOGIN_FAIL\"));\n      dispatch({ type: AUTH_ERROR });\n    });\n};\n\n// get contacts\nexport const getContacts = () => dispatch => {\n  axios\n    .get(\"/api/users/contacts\", headers())\n    .then(res => dispatch({ type: CONTACTS_LOADED, payload: res.data }))\n    .catch(err => returnErrors(err, \"CONTACTS_ERROR\"));\n};\n\n// new contact\nexport const newContact = username => dispatch => {\n  axios\n    .post(\"/api/users/contact\", { username }, headers())\n    .then(res => {\n      dispatch({ type: CONTACTS_UPDATED, payload: res.data });\n      dispatch(clearErrors());\n    })\n    .catch(err => dispatch(returnErrors(err, \"ADD_CONTACT_ERR\")));\n};\n\n// logout\nexport const logout = () => dispatch => {\n  dispatch({ type: USER_LOADING });\n  // req invalidate token\n  /* axios .... */\n\n  dispatch({ type: CLEAR_CHATS });\n  dispatch({ type: LOGOUT_SUCCESS });\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../actions/authActions\";\n\nexport default function() {\n  const dispatch = useDispatch();\n  return (\n    <button\n      className=\"btn\"\n      onClick={() => window.confirm(\"Logout?\") && dispatch(logout())}\n    >\n      <span className=\"navbar-light\">\n        <img src=\"/images/out.png\" alt=\"logout\" style={{ height: \"4vh\" }} />\n      </span>\n    </button>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport Logout from \"../auth/Logout\";\nimport { useSelector } from \"react-redux\";\n\nexport default function UserInfo({\n  collapse,\n  setCollapse,\n  showModal,\n  className = \"\"\n}) {\n  const user = useSelector(state => state.auth.user);\n  return (\n    <div className={`user-info ${className}`}>\n      <button\n        className={`btn d-md-none`}\n        onClick={() => setCollapse(!collapse)}\n      >\n        <span className=\"navbar-light\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </span>\n      </button>\n      <span className=\"user-info-text\">{user.name}</span>\n      <span className=\"float-right\">\n        <ChatMenu showModal={showModal} />\n        <Logout />\n      </span>\n    </div>\n  );\n}\n\nfunction ChatMenu({ showModal }) {\n  const s = { fontSize: \"3vh\" };\n  return (\n    <Fragment>\n      <span className=\"navbar-light\">\n        <button\n          className=\"btn\"\n          onClick={() => {\n            showModal(\"newgroup\");\n          }}\n        >\n          <span style={s}>+</span>\n        </button>\n        <button\n          className=\"btn\"\n          onClick={() => {\n            showModal(\"contacts\");\n          }}\n        >\n          <span style={s} role=\"img\" aria-label=\"a\">💬</span>\n        </button>\n      </span>\n    </Fragment>\n  );\n}\n","import React from \"react\";\n\nexport default function ChatSearch() {\n  return (\n    <div className=\"chat-search pt-1 pb-1\">\n      <form onClick={e => e.preventDefault()}>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Cari...\"\n          style={{ height: \"38px\", fontSize: \"20px\" }}\n        />\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport default function ChatInfo({ chat, showModal }) {\n  const { name, type, members } = chat;\n  const online = []; //\n  const myName = useSelector(state => state.auth.user.name);\n  const groupName =\n    type === \"group\"\n      ? name\n      : name.split(\"__\")[0] === myName\n      ? name.split(\"__\")[1]\n      : name.split(\"__\")[0];\n  return (\n    <div className=\"chat-info pl-2\">\n      <div>\n        <p className=\"mb-0\">\n          <b>{groupName}</b>\n        </p>\n        {type === \"group\" && (\n          <small>\n            {members.length} Anggota | Online ({online.length})\n          </small>\n        )}\n      </div>\n      <div className=\"chat-info-menu\">\n        {type === \"group\" && (\n          <button\n            className=\"btn\"\n            onClick={() => showModal(\"chat-settings\", groupName)}\n          >\n            <span className=\"menu-icon\"></span>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport default function ChatMessages({ messages }) {\n  const end = useRef(null);\n  const id = useSelector(state => state.auth.user._id);\n  useEffect(() => {\n    end.current.scrollIntoView();\n  }, [messages]);\n  return (\n    <div className=\"chat-messages\">\n      {messages.map((message, i) => (\n        <div\n          className={`chat-item ${\n            message.from\n              ? message.from === id && \"chat-item-right\"\n              : \"chat-item-center\"\n          }`}\n          key={i}\n        >\n          {message.from && message.from !== id && message.name + \": \"}\n          {message.text}\n        </div>\n      ))}\n      <div ref={end}></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\n\nexport default function ChatForm({ sendMessage }) {\n  const [text, setText] = useState(\"\");\n  return (\n    <div className=\"message-form\">\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          if (text) sendMessage(text);\n          setText(\"\");\n        }}\n      >\n        <input\n          type=\"text\"\n          value={text}\n          onChange={e => setText(e.target.value)}\n          placeholder=\"Ketikkan pesan...\"\n        />\n        <button>\n          <span style={{ fontSize: \"200%\" }}>➤</span>\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function({ modal, setModal, children }) {\n  const title = children.props ? children.props.title : \"\";\n  return (\n    <div\n      className=\"modal\"\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      style={{ display: modal ? \"block\" : \"none\", overflow: \"auto\" }}\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{title}</h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              aria-label=\"Close\"\n              onClick={() => setModal(false)}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">{children}</div>          \n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport default function({ submitNewGroup }) {\n  const [groupName, setGroupName] = useState(\"\");\n  const loading = useSelector(state => state.chats.isLoading);\n  const error = useSelector(state => state.error);\n\n  return (\n    <div>\n      {JSON.stringify(error)}\n      <form\n        className=\"form\"\n        onSubmit={e => {\n          e.preventDefault();\n          if (groupName) submitNewGroup(groupName);\n          setGroupName(\"\");\n        }}\n      >\n        <input\n          type=\"text\"\n          className=\"form-control mb-2\"\n          placeholder=\"Nama Group\"\n          value={groupName}\n          onChange={e => setGroupName(e.target.value)}\n        />\n        <button\n          disabled={loading}\n          className=\"btn btn-outline-primary btn-block\"\n        >\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { newContact } from \"../../../actions/authActions\";\nimport { useEffect } from \"react\";\nimport { privateMessage } from \"../../../actions/chatsActions\";\n\nexport default function({ setModal }) {\n  const [username, setUsername] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [filteredContacts, setFilteredContacts] = useState([]);\n\n  // redux\n  const error = useSelector(state => state.error);\n  const contacts = useSelector(state => state.contacts);\n  const dispatch = useDispatch();\n\n  const submit = e => {\n    e.preventDefault();\n    if (username) dispatch(newContact(username));\n    setUsername(\"\");\n  };\n  \n  useEffect(() => {\n    setFilteredContacts(\n      contacts.filter(\n        contact =>\n          contact.username.toLowerCase().indexOf(filter.toLowerCase()) > -1 ||\n          contact.name.toLowerCase().indexOf(filter.toLowerCase()) > -1\n      )\n    );\n  }, [filter, contacts]);\n\n  const data = filter ? filteredContacts : contacts;\n  return (\n    <div>\n      {error.msg && <div className=\"alert alert-danger\">{error.msg}</div>}\n      <form onSubmit={e => submit(e)}>\n        <input\n          type=\"text\"\n          className=\"form-control mb-1\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={e => setUsername(e.target.value)}\n        />\n        <button className=\"btn btn-outline-primary btn-block\">Tambahkan</button>\n      </form>\n      <hr />\n      {contacts.length === 0 ? (\n        <p className=\"small text-muted\">Belum ada kontak</p>\n      ) : (\n        <input\n          type=\"text\"\n          className=\"form-control mb-1\"\n          placeholder=\"cari nama / username\"\n          value={filter}\n          onChange={e => setFilter(e.target.value)}\n        />\n      )}\n      <ul\n        className=\"list-group\"\n        style={{ maxHeight: \"50vh\", overflow: \"auto\" }}\n      >\n        {data.map((contact, i) => (\n          <li key={contact.username + i} className=\"list-group-item p-1 pl-2\">\n            <div className=\"float-left\">\n              <p className=\"mb-0\">{contact.name}</p>\n              <small className=\"text-muted\">{contact.username}</small>\n            </div>\n            <button\n              className=\"btn float-right\"\n              onClick={() => {\n                dispatch(privateMessage(contact._id));\n                setModal(false);\n              }}\n            >\n              <span style={{ fontSize: \"20px\" }} role=\"img\" aria-label=\"msg\">💬</span>\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport default function({ showModal }) {\n  const { members, owner } = useSelector(state => state.activeChat);\n  const myId = useSelector(state => state.auth.user._id);\n  return (\n    <div>\n      <p className=\"mb-1\">\n        <b>\n          Anggota ({members.length})\n          {owner === myId && (\n            <button\n              className=\"ml-2 btn btn-sm btn-outline-dark p-0 pr-1 pl-1\"\n              onClick={() => {\n                showModal(\"invite-member\");\n              }}\n            >\n              <span>&#43;</span>\n            </button>\n          )}\n        </b>\n      </p>\n      <ul className=\"list-group\">\n        {members.map(member => (\n          <li key={member.username} className=\"list-group-item p-1 pl-2\">\n            <p className=\"mb-0\">{member.name}</p>\n            <small className=\"text-muted\">{member.username}</small>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport default function({ submitInvite }) {\n  const [username, setUsername] = useState(\"\");\n  // redux\n  const error = useSelector(state => state.error);\n  const contacts = useSelector(state => state.contacts);\n\n  const submit = e => {\n    e.preventDefault();\n    if (username) submitInvite(username);\n    setUsername(\"\");\n  };\n  return (\n    <div>\n      {error.msg && <div className=\"alert alert-danger\">{error.msg}</div>}\n      <form onSubmit={e => submit(e)}>\n        <input\n          type=\"text\"\n          className=\"form-control mb-1\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={e => setUsername(e.target.value)}\n        />\n        <button className=\"btn btn-outline-primary btn-block\">Tambahkan</button>\n      </form>\n      <hr />\n      <p className=\"m-0\">Dari daftar kontak</p>\n      {contacts.length === 0 && (\n        <p className=\"small text-muted\">Belum ada kontak</p>\n      )}\n      <ul className=\"list-group\">\n        {contacts.map(contact => (\n          <li className=\"list-group-item p-1 pl-2\">\n            {JSON.stringify(contact)}\n            <button className=\"btn btn-sm btn-outline-primary\">\n              Tambahkan\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  loadChats,\n  setActiveChat,\n  updateMessages,\n  createGroup,\n  invite,\n  added,\n  newMember\n} from \"../../actions/chatsActions\";\n\nimport ChatList from \"./ChatList\";\nimport UserInfo from \"./UserInfo\";\nimport ChatSearch from \"./ChatSearch\";\nimport ChatInfo from \"./ChatInfo\";\nimport ChatMessages from \"./ChatMessages\";\nimport ChatForm from \"./ChatForm\";\n\nimport Modal from \"../wrapper/Modal\";\nimport NewGroup from \"./modal/NewGroup\";\nimport Contacts from \"./modal/Contacts\";\nimport ChatSettings from \"./modal/ChatSettings\";\nimport Invite from \"./modal/Invite\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function Chat({ io }) {\n  const [collapse, setCollapse] = useState(true);\n  const [modal, setModal] = useState(false);\n  const [modalContent, setModalContent] = useState(null);\n\n  const chats = useSelector(state => state.chats);\n  const activeChat = useSelector(state => state.activeChat);\n  const { user } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (io) io.off();\n    // new message\n    io.on(\"message\", message => {\n      dispatch(updateMessages(message));\n    });\n    // new group\n    io.on(\"added\", group => {\n      dispatch(added(group));\n    });\n    // new member\n    io.on(\"new_member\", (user, id) => {\n      dispatch(\n        updateMessages({\n          name: \"System\",\n          text: `${user.name} (${user.username}) telah bergabung!`,\n          room: activeChat._id\n        })\n      );\n      if (user._id !== id) dispatch(newMember(user));\n    });\n  }, [dispatch, io, activeChat._id, user._id]);\n\n  useEffect(() => {\n    // load chat\n    dispatch(loadChats());\n  }, [dispatch]);\n\n  const setChat = chat => {\n    dispatch(setActiveChat(chat));\n    setCollapse(true);\n  };\n\n  const showModal = content => {\n    setModalContent(content);\n    setModal(true);\n  };\n\n  const sendMessage = text => {\n    const { _id, name } = user;\n    io.emit(\n      \"message\",\n      { from: _id, name, text, room: activeChat._id },\n      ({ err, message }) => {\n        if (err) {\n          /* error */\n        }\n        dispatch(updateMessages(message));\n      }\n    );\n  };\n\n  const submitNewGroup = groupName => {\n    dispatch(createGroup(groupName));\n    setCollapse(true);\n    setModal(false);\n  };\n\n  const submitInvite = username => dispatch(invite(username, activeChat._id));\n\n  return (\n    <div className=\"row p-0\" id=\"chat\">\n      <Modal modal={modal} setModal={setModal}>\n        {modalContent === \"newgroup\" ? (\n          <NewGroup title=\"Buat group\" submitNewGroup={submitNewGroup} />\n        ) : modalContent === \"contacts\" ? (\n          <Contacts title=\"Kontak\" setModal={setModal} />\n        ) : modalContent === \"chat-settings\" ? (\n          <ChatSettings title={activeChat.name} showModal={showModal} />\n        ) : modalContent === \"invite-member\" ? (\n          <Invite title={activeChat.name} submitInvite={submitInvite} />\n        ) : (\n          \"\"\n        )}\n      </Modal>\n\n      <div className={`col-md-5 col-lg-4 p-0`}>\n        <UserInfo\n          collapse={collapse}\n          setCollapse={setCollapse}\n          showModal={showModal}\n        />\n        <div className={`${collapse && \"collapse\"} d-md-block `}>\n          <ChatSearch />\n          <ChatList chats={chats} setChat={setChat} />\n        </div>\n      </div>\n      <div\n        className={`col-md-7 col-lg-8 p-0 whitesmoke ${!collapse &&\n          \"collapse\"}`}\n      >\n        {activeChat._id ? (\n          <Fragment>\n            <ChatInfo chat={activeChat} showModal={showModal} />\n            <ChatMessages messages={activeChat.messages} />\n            <ChatForm sendMessage={sendMessage} />\n          </Fragment>\n        ) : (\n          <Welcome />\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction Welcome() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\"\n      }}\n    >\n      <div className=\"text-center\">\n        <h2>\n          <a\n            href=\"https://www.mongodb.com/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            M\n          </a>\n          <a\n            href=\"https://expressjs.com/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            E\n          </a>\n          <a\n            href=\"https://reactjs.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            R\n          </a>\n          <a\n            href=\"https://nodejs.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            N\n          </a>{\" \"}\n          CHAT APP\n        </h2>\n        <p>\n          +\n          <a\n            href=\"https://socket.io/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            socket.io\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { login } from \"../../actions/authActions\";\nimport { useEffect } from \"react\";\nimport { clearErrors } from \"../../actions/errorAction\";\n\nexport default function Login() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const error = useSelector(state => state.error);\n  const { isAuthenticated } = useSelector(state => state.auth);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(clearErrors());\n  }, [dispatch]);\n\n  const submit = e => {\n    e.preventDefault();\n    dispatch(login({ username, password }));\n  };\n\n  if (isAuthenticated) return <Redirect to=\"/\" />;\n  return (\n    <div className=\"row auth-container p-5\">\n      <div className=\"col-lg-4 offset-lg-4 col-md-6 offset-md-3\">\n        <h2>Login</h2>\n        {JSON.stringify(error)}\n        <form onSubmit={e => submit(e)}>\n          <div className=\"form-group row\">\n            <label className=\"col-md-3 col-form-label\" htmlFor=\"username\">\n              Username\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control col-md-9\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-md-3 col-form-label\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              className=\"form-control col-md-9\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group row\">\n            <button className=\"btn btn-outline-success btn-block offset-md-3 col-md-3\">\n              Login\n            </button>\n            <div className=\"col-md-3 offset-3 col-form-label text-right\">\n              <Link to=\"/register\">Register</Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { register } from \"../../actions/authActions\";\nimport { newErrors, clearErrors } from \"../../actions/errorAction\";\nimport { useEffect } from \"react\";\n\nexport default function Register() {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n\n  const error = useSelector(state => state.error);\n  const { isAuthenticated } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(clearErrors);\n  }, [dispatch]);\n\n  const submit = e => {\n    e.preventDefault();\n    if (password !== password2)\n      return dispatch(\n        newErrors(\n          {\n            msg: \"Validation Error\",\n            errors: [\"Konfirmasi password tidak sama\"]\n          },\n          \"REGISTER_FAIL\"\n        )\n      );\n    dispatch(register({ username, password, email, name }));\n  };\n\n  if (isAuthenticated) return <Redirect to=\"/\" />;\n  return (\n    <div className=\"row auth-container p-5\">\n      <div className=\"col-md-8 offset-md-2 col-lg-6 offset-lg-3\">\n        <h2>Register</h2>\n        {JSON.stringify(error)}\n        <form onSubmit={e => submit(e)}>\n          <div className=\"form-group row\">\n            <label className=\"col-form-label col-md-3\" htmlFor=\"username\">\n              Username\n            </label>\n            <input\n              placeholder=\"Username\"\n              type=\"text\"\n              className=\"form-control col-md-9\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-form-label col-md-3\" htmlFor=\"email\">\n              Email\n            </label>\n            <input\n              placeholder=\"Email\"\n              type=\"email\"\n              className=\"form-control col-md-9\"\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-form-label col-md-3\" htmlFor=\"name\">\n              Nama\n            </label>\n            <input\n              placeholder=\"Nama\"\n              type=\"text\"\n              className=\"form-control col-md-9\"\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-form-label col-md-3\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              placeholder=\"Password\"\n              type=\"password\"\n              className=\"form-control col-md-9\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-form-label col-md-3\" htmlFor=\"password2\">\n              Konfirmasi Password\n            </label>\n            <input\n              placeholder=\"Konfirmasi password\"\n              type=\"password\"\n              className=\"form-control col-md-9\"\n              value={password2}\n              onChange={e => setPassword2(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group row\">\n            <button className=\"btn btn-outline-success btn-block offset-md-3 col-md-3\">\n              Register\n            </button>\n            <div className=\"col-md-3 offset-3 col-form-label text-right\">\n              <Link to=\"/login\">Login</Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport socketio from \"socket.io-client\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport \"./App.css\";\n\n// components\nimport Chat from \"./components/chat/Chat\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport { loadUser } from \"./actions/authActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { isAuthenticated, token } = useSelector(state => state.auth);\n  const [io, setIo] = useState(null);\n\n  useEffect(() => {\n    dispatch(loadUser());\n  }, [dispatch]);\n\n  useEffect(() => {\n    // connect\n    if (token)\n      if(!io) setIo(socketio.connect(`/?token=${token}`));\n    else if (io) io.close();\n  }, [token, io]);\n\n  // protected route\n  const Protected = ({ path, lastPath, children, ...rest }) => {\n    if (!isAuthenticated) return <Redirect to=\"/login\" />;\n    return (\n      <Route path={path} {...rest}>\n        {children}\n      </Route>\n    );\n  };\n\n  return (\n    <div className=\"container-fluid\" id=\"app\">\n      <Router>\n        <Switch>\n          <Protected exact path=\"/\">\n            <Chat io={io} />\n          </Protected>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"*\">\n            <h1>Not found</h1>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  AUTH_SUCCESS,\n  AUTH_ERROR,\n  LOGOUT_SUCCESS,\n  USER_LOADING,\n  USER_LOADED,\n} from \"../actions/types\";\n\nconst initialState = {\n  token: null,\n  isAuthenticated: false,\n  isLoading: false,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return { ...state, isLoading: true };\n    case AUTH_SUCCESS:\n    case USER_LOADED:\n      //localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...action.payload,\n        isLoading: false,\n        isAuthenticated: true\n      };     \n    case AUTH_ERROR:\n    case LOGOUT_SUCCESS:\n      localStorage.removeItem(\"token\");\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import {\n  CONTACTS_LOADED,\n  CONTACTS_UPDATED,\n  LOGOUT_SUCCESS\n} from \"../actions/types\";\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case CONTACTS_LOADED:\n      return action.payload;\n    case CONTACTS_UPDATED:\n      return [...state, action.payload];\n    case LOGOUT_SUCCESS:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\n\nconst initialState = {\n  msg: \"\",\n  errors: [],\n  status: null,\n  id: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        errors: action.payload.errors,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case CLEAR_ERRORS:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import {\n  CHATS_LOADING,\n  CHATS_LOADED,\n  CHATS_ERROR,\n  CLEAR_CHATS,\n  UPDATE_MESSAGES,\n  LOGOUT_SUCCESS,\n  GROUP_CREATED,\n  ADDED_TO_GROUP\n} from \"../actions/types\";\n\nconst initialState = {\n  data: [],\n  isLoading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case CHATS_LOADING:\n      return { ...state, isLoading: true };\n    case CHATS_LOADED:\n      return {\n        data: action.payload,\n        isLoading: false\n      };\n    case UPDATE_MESSAGES:\n      let index = null;\n      // update\n      const newData = state.data.map((chat, i) => {\n        if (chat._id === action.payload.room) {\n          index = i;\n          chat.message = action.payload;\n          chat.messages = [...chat.messages, action.payload];\n        }\n        return chat;\n      });\n      // pindah ke awal\n      newData.splice(0, 0, newData.splice(index, 1)[0]);\n      return {\n        isLoading: false,\n        data: newData\n      };\n    case GROUP_CREATED:\n    case ADDED_TO_GROUP:\n      const { _id, name, type, messages } = action.payload;\n      state.data.unshift({\n        _id,\n        name,\n        type,\n        messages,\n        message: messages[0]\n      });\n      return {\n        ...state,\n        isLoading: false\n      };\n    case CLEAR_CHATS:\n    case CHATS_ERROR:\n    case LOGOUT_SUCCESS:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import {\n  SET_ACTIVE_CHAT,\n  UPDATE_MESSAGES,\n  LOGOUT_SUCCESS,\n  NEW_MEMBER\n} from \"../actions/types\";\n\nconst initialState = {\n  _id: null,\n  name: \"\",\n  type: \"\",\n  members: [],\n  messages: [],\n  isLoading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ACTIVE_CHAT:\n      return { ...action.payload };\n    case UPDATE_MESSAGES:\n      return { ...state, messages: [...state.messages, action.payload] };\n    case NEW_MEMBER:\n      return { ...state, members: [...state.members, action.payload] };\n    case LOGOUT_SUCCESS:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport contactsReducer from \"./contactsReducer\";\nimport errorReducer from \"./errorReducer\";\nimport chatsReducer from \"./chatsReducer\";\nimport activeChatReducer from \"./activeChatReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  contacts: contactsReducer,\n  error: errorReducer,\n  chats: chatsReducer,\n  activeChat: activeChatReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__\n    ? compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n      )\n    : compose(\n        applyMiddleware(...middleware)\n      )\n);\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}